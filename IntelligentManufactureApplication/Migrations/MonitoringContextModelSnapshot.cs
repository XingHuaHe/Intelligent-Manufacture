// <auto-generated />
using IntelligentManufactureApplication.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace IntelligentManufactureApplication.Migrations
{
    [DbContext(typeof(MonitoringContext))]
    partial class MonitoringContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("IntelligentManufactureApplication.Models.DBModels.TCategory", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("text");

                    b.Property<string>("CategoryName")
                        .HasColumnType("text");

                    b.Property<bool>("ChildenID")
                        .HasColumnType("boolean");

                    b.Property<string>("SavePath")
                        .HasColumnType("text");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("IntelligentManufactureApplication.Models.DBModels.TComponent", b =>
                {
                    b.Property<string>("ComponentID")
                        .HasColumnType("text");

                    b.Property<bool>("ChildenID")
                        .HasColumnType("boolean");

                    b.Property<string>("ComponentName")
                        .HasColumnType("text");

                    b.Property<string>("ParentID")
                        .HasColumnType("text");

                    b.Property<string>("SavePath")
                        .HasColumnType("text");

                    b.HasKey("ComponentID");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("IntelligentManufactureApplication.Models.DBModels.TComponentType", b =>
                {
                    b.Property<string>("ComponentTypeID")
                        .HasColumnType("text");

                    b.Property<bool>("ChildenID")
                        .HasColumnType("boolean");

                    b.Property<string>("ComponentTypeName")
                        .HasColumnType("text");

                    b.Property<string>("ParentID")
                        .HasColumnType("text");

                    b.Property<string>("SavePath")
                        .HasColumnType("text");

                    b.HasKey("ComponentTypeID");

                    b.ToTable("ComponentTypes");
                });

            modelBuilder.Entity("IntelligentManufactureApplication.Models.DBModels.TCraft", b =>
                {
                    b.Property<string>("CraftID")
                        .HasColumnType("text");

                    b.Property<string>("CategoryID")
                        .HasColumnType("text");

                    b.Property<bool>("CheckState")
                        .HasColumnType("boolean");

                    b.Property<string>("CheckTime")
                        .HasColumnType("text");

                    b.Property<string>("CheckedUser")
                        .HasColumnType("text");

                    b.Property<string>("ComponentID")
                        .HasColumnType("text");

                    b.Property<string>("ComponentTypeID")
                        .HasColumnType("text");

                    b.Property<string>("CraftName")
                        .HasColumnType("text");

                    b.Property<string>("FileVersion")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedTimee")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("text");

                    b.Property<string>("PartID")
                        .HasColumnType("text");

                    b.Property<string>("PartTypeID")
                        .HasColumnType("text");

                    b.Property<string>("SavePath")
                        .HasColumnType("text");

                    b.HasKey("CraftID");

                    b.ToTable("Crafts");
                });

            modelBuilder.Entity("IntelligentManufactureApplication.Models.DBModels.TDrawing", b =>
                {
                    b.Property<string>("DrawingID")
                        .HasColumnType("text");

                    b.Property<string>("CategoryID")
                        .HasColumnType("text");

                    b.Property<bool>("CheckState")
                        .HasColumnType("boolean");

                    b.Property<string>("CheckTime")
                        .HasColumnType("text");

                    b.Property<string>("CheckedUser")
                        .HasColumnType("text");

                    b.Property<string>("ComponentID")
                        .HasColumnType("text");

                    b.Property<string>("ComponentTypeID")
                        .HasColumnType("text");

                    b.Property<string>("DrawingName")
                        .HasColumnType("text");

                    b.Property<string>("FileVersion")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedTimee")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("text");

                    b.Property<string>("PartID")
                        .HasColumnType("text");

                    b.Property<string>("PartTypeID")
                        .HasColumnType("text");

                    b.Property<string>("SavePath")
                        .HasColumnType("text");

                    b.HasKey("DrawingID");

                    b.ToTable("Drawings");
                });

            modelBuilder.Entity("IntelligentManufactureApplication.Models.DBModels.TNCProgram", b =>
                {
                    b.Property<string>("NCProgramID")
                        .HasColumnType("text");

                    b.Property<string>("CategoryID")
                        .HasColumnType("text");

                    b.Property<bool>("CheckState")
                        .HasColumnType("boolean");

                    b.Property<string>("CheckTime")
                        .HasColumnType("text");

                    b.Property<string>("CheckedUser")
                        .HasColumnType("text");

                    b.Property<string>("ComponentID")
                        .HasColumnType("text");

                    b.Property<string>("ComponentTypeID")
                        .HasColumnType("text");

                    b.Property<string>("FileVersion")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedTimee")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedUser")
                        .HasColumnType("text");

                    b.Property<string>("NCProgramName")
                        .HasColumnType("text");

                    b.Property<string>("PartID")
                        .HasColumnType("text");

                    b.Property<string>("PartTypeID")
                        .HasColumnType("text");

                    b.Property<string>("ProcessID")
                        .HasColumnType("text");

                    b.Property<string>("SavePath")
                        .HasColumnType("text");

                    b.HasKey("NCProgramID");

                    b.ToTable("NCPrograms");
                });

            modelBuilder.Entity("IntelligentManufactureApplication.Models.DBModels.TPart", b =>
                {
                    b.Property<string>("PartID")
                        .HasColumnType("text");

                    b.Property<bool>("ChildenID")
                        .HasColumnType("boolean");

                    b.Property<string>("ParentID")
                        .HasColumnType("text");

                    b.Property<string>("PartName")
                        .HasColumnType("text");

                    b.Property<string>("SavePath")
                        .HasColumnType("text");

                    b.HasKey("PartID");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("IntelligentManufactureApplication.Models.DBModels.TPartType", b =>
                {
                    b.Property<string>("PartTypeID")
                        .HasColumnType("text");

                    b.Property<bool>("ChildenID")
                        .HasColumnType("boolean");

                    b.Property<string>("ParentID")
                        .HasColumnType("text");

                    b.Property<string>("PartTypeName")
                        .HasColumnType("text");

                    b.Property<string>("SavePath")
                        .HasColumnType("text");

                    b.HasKey("PartTypeID");

                    b.ToTable("PartTypes");
                });

            modelBuilder.Entity("IntelligentManufactureApplication.Models.DBModels.TProcess", b =>
                {
                    b.Property<string>("ProcessID")
                        .HasColumnType("text");

                    b.Property<string>("Applicability")
                        .HasColumnType("text");

                    b.Property<string>("Hours")
                        .HasColumnType("text");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ProcessName")
                        .HasColumnType("text");

                    b.Property<string>("ProcessNumber")
                        .HasColumnType("text");

                    b.Property<string>("SavePath")
                        .HasColumnType("text");

                    b.Property<string>("UnitPrice")
                        .HasColumnType("text");

                    b.HasKey("ProcessID");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("IntelligentManufactureApplication.Models.DBModels.TProductList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("BlankSize")
                        .HasColumnType("text");

                    b.Property<string>("CheckGroup")
                        .HasColumnType("text");

                    b.Property<string>("CuttingSize")
                        .HasColumnType("text");

                    b.Property<string>("DrawingID")
                        .HasColumnType("text");

                    b.Property<string>("HeatTreatmentCode")
                        .HasColumnType("text");

                    b.Property<string>("HeattreatmentStrength")
                        .HasColumnType("text");

                    b.Property<string>("Makings")
                        .HasColumnType("text");

                    b.Property<string>("MakingsNumber")
                        .HasColumnType("text");

                    b.Property<string>("MaterialStrength")
                        .HasColumnType("text");

                    b.Property<string>("MaterialsNumber")
                        .HasColumnType("text");

                    b.Property<string>("PartID")
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("SavePath")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("Specification")
                        .HasColumnType("text");

                    b.Property<string>("Standard")
                        .HasColumnType("text");

                    b.Property<string>("StelliteAndNitriding")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProductLists");
                });

            modelBuilder.Entity("IntelligentManufactureApplication.Models.DBModels.TUser", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasMaxLength(8)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("HeadPortrait")
                        .HasColumnType("text");

                    b.Property<string>("Level")
                        .HasColumnType("text");

                    b.Property<bool>("OnlineState")
                        .HasColumnType("boolean");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<string>("UserPasswd")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
